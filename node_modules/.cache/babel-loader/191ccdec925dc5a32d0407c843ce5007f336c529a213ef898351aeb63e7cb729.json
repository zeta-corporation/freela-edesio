{"ast":null,"code":"var _jsxFileName = \"/home/alisson/\\xC1rea de Trabalho/copabarreiros/src/context/userContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [user, setUser] = useState({});\n  const [usersList, setUsersList] = useState([]);\n  const [image, setImage] = useState('');\n  const [reload, setReload] = useState(false);\n  useEffect(() => {\n    async function loadUser() {\n      const userId = localStorage.getItem('@ID');\n      if (userId) {\n        try {\n          const {\n            data\n          } = await api.get(`users/${userId}`);\n          setUser(data);\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        navigate('/', {\n          replace: true\n        });\n      }\n      let {\n        data\n      } = await api.get('users/');\n      data = data.sort(usr => usr.status === 'n-pago' ? -2 : usr.status === 'aguardando' ? -1 : 1);\n      // setUsersList(data);\n      if (user !== null && user !== void 0 && user.is_superuser) {\n        try {\n          const {\n            data\n          } = await api.get(`users/`);\n          setUsersList(data);\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        console.log('teste');\n      }\n    }\n    loadUser();\n  }, [reload]);\n  const createUser = data => {\n    if (data.password === data.confirmPassword) {\n      api.post('users/', data).then(_ref2 => {\n        let {\n          data\n        } = _ref2;\n        localStorage.setItem('@ID', data.id);\n        setUser(data);\n        toast.success('Usuário criado com sucesso!');\n        if (data.is_superuser) {\n          navigate('/dashboard', {\n            replace: true\n          });\n        }\n        navigate('/home', {\n          replace: true\n        });\n      }).catch(_ref3 => {\n        let {\n          response: {\n            data\n          }\n        } = _ref3;\n        return toast.error(data.username);\n      });\n    } else toast.error('Senhas não conferem!');\n  };\n  const loginUser = data => {\n    api.post('/login/', data).then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n      localStorage.setItem('@ID', data.id);\n      setUser(data);\n      toast.success('Logado com sucesso!');\n      if (data.is_superuser) {\n        navigate('/dashboard', {\n          replace: true\n        });\n      } else navigate('/home', {\n        replace: true\n      });\n    }).catch(_ref5 => {\n      let {\n        response: {\n          data\n        }\n      } = _ref5;\n      toast.error(data.message);\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('@ID');\n    navigate('/', {\n      replace: true\n    });\n  };\n  const changeStatus = (value, id) => {\n    if (value) {\n      api.patch(`users/${id}/`, {\n        status: value\n      }).then(_ref6 => {\n        let {\n          data\n        } = _ref6;\n        toast.success('Status alterado com sucesso!');\n      }).catch(_ref7 => {\n        let {\n          response: {\n            data\n          }\n        } = _ref7;\n        return toast.error(data.message);\n      });\n    }\n    setReload(!reload);\n  };\n  const uploadImage = async () => {\n    const formData = new FormData();\n    formData.append('file', image);\n    formData.append('upload_preset', 'lfw1muot');\n    let response;\n    await Axios.post('https://api.cloudinary.com/v1_1/dfqwjjm1u/image/upload', formData).then(res => {\n      response = res;\n      toast.success('Comprovante enviado!');\n    }).catch(err => toast.error());\n    await api.patch(`users/${user.id}/pay/`, {\n      image_url: response.data.url\n    });\n    await api.patch(`users/${user.id}/`, {\n      status: 'aguardando'\n    });\n    setReload(!reload);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      createUser,\n      user,\n      loginUser,\n      logout,\n      navigate,\n      usersList,\n      changeStatus,\n      uploadImage,\n      setImage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"3TUnDs63Kc85OsG9sXkUG9m/9EU=\", false, function () {\n  return [useNavigate];\n});\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","api","toast","useNavigate","Axios","UserContext","ContextProvider","children","navigate","user","setUser","usersList","setUsersList","image","setImage","reload","setReload","loadUser","userId","localStorage","getItem","data","get","error","console","log","replace","sort","usr","status","is_superuser","err","createUser","password","confirmPassword","post","then","setItem","id","success","catch","response","username","loginUser","message","logout","removeItem","changeStatus","value","patch","uploadImage","formData","FormData","append","res","image_url","url"],"sources":["/home/alisson/Área de Trabalho/copabarreiros/src/context/userContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { toast } from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport Axios from 'axios';\nexport const UserContext = createContext();\n\nexport const ContextProvider = ({ children }) => {\n    const navigate = useNavigate();\n    const [user, setUser] = useState({});\n    const [usersList, setUsersList] = useState([]);\n    const [image, setImage] = useState('');\n    const [reload, setReload] = useState(false);\n\n    useEffect(() => {\n        async function loadUser() {\n            const userId = localStorage.getItem('@ID');\n            if (userId) {\n                try {\n                    const { data } = await api.get(`users/${userId}`);\n                    setUser(data);\n                } catch (error) {\n                    console.log(error);\n                }\n            } else {\n                navigate('/', { replace: true });\n            }\n            let { data } = await api.get('users/');\n            data = data.sort((usr) =>\n                usr.status === 'n-pago'\n                    ? -2\n                    : usr.status === 'aguardando'\n                    ? -1\n                    : 1,\n            );\n            // setUsersList(data);\n            if (user?.is_superuser) {\n                try {\n                    const { data } = await api.get(`users/`);\n                    setUsersList(data);\n                } catch (err) {\n                    console.log(err);\n                }\n            } else {\n                console.log('teste');\n            }\n        }\n        loadUser();\n    }, [reload]);\n\n    const createUser = (data) => {\n        if (data.password === data.confirmPassword) {\n            api.post('users/', data)\n                .then(({ data }) => {\n                    localStorage.setItem('@ID', data.id);\n                    setUser(data);\n                    toast.success('Usuário criado com sucesso!');\n                    if (data.is_superuser) {\n                        navigate('/dashboard', { replace: true });\n                    }\n                    navigate('/home', { replace: true });\n                })\n                .catch(({ response: { data } }) => toast.error(data.username));\n        } else toast.error('Senhas não conferem!');\n    };\n\n    const loginUser = (data) => {\n        api.post('/login/', data)\n            .then(({ data }) => {\n                localStorage.setItem('@ID', data.id);\n                setUser(data);\n                toast.success('Logado com sucesso!');\n                if (data.is_superuser) {\n                    navigate('/dashboard', { replace: true });\n                } else navigate('/home', { replace: true });\n            })\n            .catch(({ response: { data } }) => {\n                toast.error(data.message);\n            });\n    };\n\n    const logout = () => {\n        localStorage.removeItem('@ID');\n        navigate('/', { replace: true });\n    };\n\n    const changeStatus = (value, id) => {\n        if (value) {\n            api.patch(`users/${id}/`, { status: value })\n                .then(({ data }) => {\n                    toast.success('Status alterado com sucesso!');\n                })\n                .catch(({ response: { data } }) => toast.error(data.message));\n        }\n        setReload(!reload);\n    };\n\n    const uploadImage = async () => {\n        const formData = new FormData();\n        formData.append('file', image);\n        formData.append('upload_preset', 'lfw1muot');\n\n        let response;\n\n        await Axios.post(\n            'https://api.cloudinary.com/v1_1/dfqwjjm1u/image/upload',\n            formData,\n        )\n            .then((res) => {\n                response = res;\n                toast.success('Comprovante enviado!');\n            })\n            .catch((err) => toast.error());\n\n        await api.patch(`users/${user.id}/pay/`, {\n            image_url: response.data.url,\n        });\n        await api.patch(`users/${user.id}/`, { status: 'aguardando' });\n        setReload(!reload);\n    };\n\n    return (\n        <UserContext.Provider\n            value={{\n                createUser,\n                user,\n                loginUser,\n                logout,\n                navigate,\n                usersList,\n                changeStatus,\n                uploadImage,\n                setImage,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}